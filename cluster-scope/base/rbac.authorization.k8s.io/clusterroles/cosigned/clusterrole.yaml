---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cosigned-webhook
  labels:
    helm.sh/chart: cosigned-v0.1.9
    app.kubernetes.io/name: cosigned
    app.kubernetes.io/instance: cosigned
    app.kubernetes.io/version: "v1.4.1"
    app.kubernetes.io/managed-by: Helm
    control-plane: cosigned-webhook
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create"]
    # Allow the reconciliation of exactly our validating webhook.

  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["validatingwebhookconfigurations", "mutatingwebhookconfigurations"]
    verbs: ["list", "watch"]

  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["validatingwebhookconfigurations", "mutatingwebhookconfigurations"]
    verbs: ["get", "update"]
    resourceNames: ["cosigned.sigstore.dev"]

  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list"]
    # The webhook configured the namespace as the OwnerRef on various cluster-scoped resources,
    # which requires we can Get the system namespace.
    resourceNames: ["cosign-system"]

    # This is needed by k8schain to support fetching pull secrets attached to pod specs
    # or their service accounts.  If pull secrets aren't used, the "secrets" below can
    # be safely dropped, but the logic will fetch the service account to check for pull
    # secrets.
  - apiGroups: [""]
    resources: ["serviceaccounts", "secrets"]
    verbs: ["get"]
